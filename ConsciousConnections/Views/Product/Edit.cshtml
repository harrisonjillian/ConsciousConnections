@model ConsciousConnections.Models.ProductEdit

@{
    ViewBag.Title = "Edit";
}

<div class="col-12">
    <h2>Edit Product Information</h2>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProductId)

    <div class="form-group text-center">
        @Html.LabelFor(model => model.ProductName)
        <div class="col-md-6 offset-3">
            @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group text-center">
        @Html.LabelFor(model => model.ProductDescription)
        <div class="col-md-6 offset-3">
            @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control" })
            @*@Html.EditorFor(model => model.ReviewDescription, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group text-center">
            @Html.LabelFor(model => model.TypeOfCategory)
            <div class="col-md-6 offset-3">
                <div class="custom-select-lg">
                    @Html.EnumDropDownListFor(model => model.TypeOfCategory, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeOfCategory, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

    <div class="form-group text-center">
        @Html.LabelFor(model => model.Price)
        <div class="col-md-6 offset-3">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group text-center">
        <div class="col-12">
            <div class="col-md-2 offset-5">
                <img src="~/Content/Assets/GreenSealCertified.jpg" class="img-fluid" alt="greensealcertified" />
            </div>
            <div class="col-md-6 offset-3">
                <div class="form-check-label">
                    @Html.EditorFor(model => model.IsGreenSealCertified )
                    @Html.ValidationMessageFor(model => model.IsGreenSealCertified, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group text-center">
        <div class="col-12">
            <div class="col-md-2 offset-5">
                <img src="~/Content/Assets/RainforestAlliance.jpg" class="img-fluid" halt="rainforestalliancecertified" />
            </div>
            <div class="col-md-6 offset-3">
                @Html.EditorFor(model => model.IsRainForestAllianceCertified)
                @Html.ValidationMessageFor(model => model.IsRainForestAllianceCertified, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group text-center">
        <div class="col-12">
            <div class="col-md-2 offset-5">
                <img src="~/Content/Assets/LeapingBunnyCertified.jpg" class="img-fluid" halt="rainforestalliancecertified" />
            </div>
            <div class="col-md-6 offset-3">
                @Html.EditorFor(model => model.IsLeapingBunnyCertified)
                @Html.ValidationMessageFor(model => model.IsLeapingBunnyCertified, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group text-center">
        <div class="col-12">
            <div class="col-md-2 offset-5">
                <img src="~/Content/Assets/FairTradeCertified.png" class="img-fluid" halt="rainforestalliancecertified" />
            </div>
            <div class="col-md-6 offset-3">
                @Html.EditorFor(model => model.IsFairTradeUSACertified)
                @Html.ValidationMessageFor(model => model.IsFairTradeUSACertified, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    @*<div class="form-group text-center">
        @Html.LabelFor(model => model.CompanyId)
        <div class="col-md-6 offset-3">
            <div class="custom-select-lg">
               
                @Html.DropDownListFor(model => model.CompanyId, new SelectList(ViewBag.Companies, "CompanyId", "CompanyName"))
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-12">
            <input type="submit" value="Save" class="btn btn-primary btn-lg" />
        </div>
    </div>
</div>
}

<div class="col-12">
    @Html.ActionLink("View All Products", "Index", null, new { @class = "createlinkcolor" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
